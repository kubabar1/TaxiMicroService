version: '2.2'

services:
    eureka-naming-server:
        image: eureka-naming-server
        container_name: eureka-naming-server
        build: ./eureka-naming-server
        ports:
            - "8761:8761"
        healthcheck:
            test: curl http://eureka-naming-server:8761 || exit 1
            interval: 3s
            retries: 10
        mem_limit: 160m

    spring-config-server:
        image: spring-config-server
        container_name: spring-config-server
        build: ./spring-config-server
        ports:
            - "8888:8888"
        depends_on:
            eureka-naming-server:
                condition: service_healthy
        healthcheck:
            test: curl http://spring-config-server:8888 || exit 1
            interval: 3s
            retries: 10
        mem_limit: 160m

    swagger:
        image: swagger
        container_name: swagger
        build: ./swagger
        ports:
            - "8000:8080"
        mem_limit: 160m

    booking-service:
        image: booking-service
        container_name: booking-service
        build: ./booking-service
        ports:
            - "8081:8080"
        depends_on:
            spring-config-server:
                condition: service_healthy
            eureka-naming-server:
                condition: service_healthy
            user-service:
                condition: service_healthy
            booking-service-database:
                condition: service_healthy
            kafka-server:
                condition: service_started
        mem_limit: 160m
        environment:
            SPRING_CONFIG_SERVER_URI: "spring-config-server"
            SPRING_CONFIG_SERVER_ACTIVE_PROFILE: "development"
            BOOKING_SERVICE_DATASOURCE_URL: "jdbc:postgresql://booking-service-database:5432/booking_service"
            BOOKING_SERVICE_DATASOURCE_USERNAME: "docker"
            BOOKING_SERVICE_DATASOURCE_PASSWORD: "docker"

    booking-service-database:
        container_name: booking-service-database
        image: kartoza/postgis
        ports:
            - "5433:5432"
        volumes:
            - ./booking-service/src/main/resources/db_scripts/postgresql/booking_service_schema_psql.sql:/docker-entrypoint-initdb.d/1_booking_service_schema.sql
            - ./booking-service/src/main/resources/db_scripts/postgresql/booking_service_demo_psql.sql:/docker-entrypoint-initdb.d/2_booking_service_demo.sql
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U docker"]
            interval: 3s
            retries: 10
        mem_limit: 160m
        environment:
            POSTGRES_DB: booking_service
            POSTGRES_USER: docker
            POSTGRES_PASS: docker
            POSTGRES_PORT: 5432

    user-service:
        image: user-service
        container_name: user-service
        build: ./user-service
        ports:
            - "8082:8080"
        depends_on:
            spring-config-server:
                condition: service_healthy
            eureka-naming-server:
                condition: service_healthy
            user-service-database:
                condition: service_healthy
            kafka-server:
                condition: service_started
        healthcheck:
            test: curl http://user-service:8080 || exit 1
            interval: 3s
            retries: 10
        mem_limit: 160m
        environment:
            SPRING_CONFIG_SERVER_URI: "spring-config-server"
            SPRING_CONFIG_SERVER_ACTIVE_PROFILE: "development"
            USER_SERVICE_DATASOURCE_URL: "jdbc:postgresql://user-service-database:5432/user_service"
            USER_SERVICE_DATASOURCE_USERNAME: "postgres"
            USER_SERVICE_DATASOURCE_PASSWORD: "qwerty"

    user-service-database:
        container_name: user-service-database
        image: postgres
        volumes:
            - ./user-service/src/main/resources/db_scripts/h2/user_service_schema_h2.sql:/docker-entrypoint-initdb.d/1_user_service_schema.sql
            - ./user-service/src/main/resources/db_scripts/h2/user_service_demo_h2.sql:/docker-entrypoint-initdb.d/2_user_service_demo.sql
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 3s
            retries: 10
        mem_limit: 160m
        environment:
            POSTGRES_DB: user_service
            POSTGRES_PASSWORD: qwerty
            POSTGRES_USER: postgres

    driver-service:
        image: driver-service
        container_name: driver-service
        build: ./driver-service
        ports:
            - "8083:8080"
        depends_on:
            spring-config-server:
                condition: service_healthy
            eureka-naming-server:
                condition: service_healthy
        mem_limit: 160m
        environment:
            SPRING_CONFIG_SERVER_URI: "spring-config-server"
            SPRING_CONFIG_SERVER_ACTIVE_PROFILE: "development"

    passenger-service:
        image: passenger-service
        container_name: passenger-service
        build: ./passenger-service
        ports:
            - "8084:8080"
        depends_on:
            spring-config-server:
                condition: service_healthy
            eureka-naming-server:
                condition: service_healthy
            user-service:
                condition: service_healthy
        mem_limit: 160m
        environment:
            SPRING_CONFIG_SERVER_URI: "spring-config-server"
            SPRING_CONFIG_SERVER_ACTIVE_PROFILE: "development"

    chat-service:
        image: chat-service
        container_name: chat-service
        build: ./chat-service
        ports:
            - "8085:8080"
        depends_on:
            spring-config-server:
                condition: service_healthy
            eureka-naming-server:
                condition: service_healthy
        mem_limit: 160m
        environment:
            SPRING_CONFIG_SERVER_URI: "spring-config-server"
            SPRING_CONFIG_SERVER_ACTIVE_PROFILE: "development"

    notification-service:
        image: notification-service
        container_name: notification-service
        build: ./notification-service
        ports:
            - "8086:8080"
        depends_on:
            spring-config-server:
                condition: service_healthy
            eureka-naming-server:
                condition: service_healthy
        mem_limit: 160m
        environment:
            SPRING_CONFIG_SERVER_URI: "spring-config-server"
            SPRING_CONFIG_SERVER_ACTIVE_PROFILE: "development"

    mailing-service:
        image: mailing-service
        container_name: mailing-service
        build: ./mailing-service
        ports:
            - "8087:8080"
        depends_on:
            spring-config-server:
                condition: service_healthy
            eureka-naming-server:
                condition: service_healthy
        mem_limit: 160m
        environment:
            SPRING_CONFIG_SERVER_URI: "spring-config-server"
            SPRING_CONFIG_SERVER_ACTIVE_PROFILE: "development"

    opinion-service:
        image: opinion-service
        container_name: opinion-service
        build: ./opinion-service
        ports:
            - "8088:8080"
        depends_on:
            spring-config-server:
                condition: service_healthy
            eureka-naming-server:
                condition: service_healthy
        mem_limit: 160m
        environment:
            SPRING_CONFIG_SERVER_URI: "spring-config-server"
            SPRING_CONFIG_SERVER_ACTIVE_PROFILE: "development"

    payment-service:
        image: payment-service
        container_name: payment-service
        build: ./payment-service
        ports:
            - "8089:8080"
        depends_on:
            spring-config-server:
                condition: service_healthy
            eureka-naming-server:
                condition: service_healthy
        mem_limit: 160m
        environment:
            SPRING_CONFIG_SERVER_URI: "spring-config-server"
            SPRING_CONFIG_SERVER_ACTIVE_PROFILE: "development"

    commerce-service:
        image: commerce-service
        container_name: commerce-service
        build: ./commerce-service
        ports:
            - "8090:8080"
        depends_on:
            spring-config-server:
                condition: service_healthy
            eureka-naming-server:
                condition: service_healthy
        mem_limit: 160m
        environment:
            SPRING_CONFIG_SERVER_URI: "spring-config-server"
            SPRING_CONFIG_SERVER_ACTIVE_PROFILE: "development"

    zookeeper-server:
        image: wurstmeister/zookeeper
        container_name: zookeeper-server
        ports:
            - "2181"
    kafka-server:
        image: wurstmeister/kafka
        container_name: kafka-server
        ports:
            - "9092"
        depends_on:
            zookeeper-server:
                condition: service_started
        environment:
            KAFKA_LISTENERS: PLAINTEXT://kafka-server:9092
            # KAFKA_ADVERTISED_HOST_NAME: kafka-server
            # KAFKA_ADVERTISED_PORT: 9095
            KAFKA_ZOOKEEPER_CONNECT: zookeeper-server:2181
            KAFKA_LOG_DIRS: /kafka/logs
            # KAFKA_offsets_topic_replication_factor: 3
