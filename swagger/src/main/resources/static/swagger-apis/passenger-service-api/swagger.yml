swagger: "2.0"
info:
    description: "Service for passengers"
    version: "1.0.0"
    title: "Passenger service"
host: "passenger-service.taxi-microservice.com"
basePath: "/"
schemes:
    - "https"
    - "http"
tags:
    - name: "passenger"
      description: "Passenger related operations"
paths:
    /passengers:
        get:
            tags:
                - "passenger"
            summary: "Get list of passengers"
            description: ""
            operationId: "getPassengers"
            produces:
                - "application/json"
            parameters:
                - in: "query"
                  type: "integer"
                  name: "page"
                  required: false
                - in: "query"
                  type: "integer"
                  name: "count"
                  required: false
            responses:
                "200":
                    description: "Passengers successfully returned"
                    schema:
                        type: "array"
                        items:
                            $ref: "#/definitions/PassengerResponseDTO"
                "204":
                    description: "No passengers"
                "401":
                    description: "Unauthorized user"
                "403":
                    description: "Access forbidden"
                "405":
                    description: "Invalid input"
        post:
            tags:
                - "passenger"
            summary: "Add passenger"
            description: ""
            operationId: "addPassengers"
            produces:
                - "application/json"
            parameters:
                -   in: "body"
                    name: "body"
                    description: "User object that needs to be updated"
                    required: true
                    schema:
                        items:
                            type: "array"
                            $ref: "#/definitions/PassengerAddDTO"
            responses:
                "200":
                    description: "Passengers successfully added"
                    schema:
                        items:
                            $ref: "#/definitions/PassengerResponseDTO"
                "401":
                    description: "Unauthorized user"
                "403":
                    description: "Access forbidden"

definitions:
    PassengerResponseDTO:
        type: "object"
        properties:
            id:
                type: "number"
                format: "long"
            userName:
                type: "string"
            email:
                type: "string"
            name:
                type: "string"
            surname:
                type: "string"
            pesel:
                type: "string"
            birthDate:
                type: "string"
                format: "date"
            creationDate:
                type: "string"
                format: "date-time"
            userSettings:
                items:
                    type: "array"
                    $ref: "#/definitions/UserSettingsDTO"
            userRole:
                items:
                    type: "array"
                    $ref: "#/definitions/RoleDTO"
    PassengerAddDTO:
        type: "object"
        properties:
            userName:
                type: "string"
            email:
                type: "string"
            name:
                type: "string"
            surname:
                type: "string"
            password:
                type: "string"
            pesel:
                type: "string"
            birthDate:
                type: "string"
                format: "date"

    UserSettingsDTO:
        type: "object"
        properties:
            appearance:
                $ref: "#/definitions/AppearanceType"
            language:
                type: "string"

    RoleDTO:
        type: "object"
        properties:
            role:
                type: "string"

    UserRole:
        type: "string"
        enum: ["driver", "passenger"]

    AppearanceType:
        type: "string"
        enum: ["light", "dark"]

